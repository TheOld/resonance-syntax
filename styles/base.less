@import "syntax-variables";

atom-text-editor,atom-text-editor{
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .syntax--wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .syntax--indent-guide {
    color: @syntax-indent-guide-color;
  }

  .syntax--invisible-character {
    color: @syntax-invisible-character-color;
  }

  .syntax--gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .syntax--line-number {
      &.syntax--cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.syntax--cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .syntax--gutter .syntax--line-number.syntax--folded,
  .syntax--gutter .syntax--line-number:after,
  .syntax--fold-marker:after {
    // color: @text-light;
    color: @text-medium;
  }

  .syntax--invisible {
    color: @syntax-text-color;
  }

  .syntax--cursor {
    color: @syntax-cursor-color;
  }

  .syntax--selection .syntax--region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .syntax--search-results .syntax--marker .syntax--region,
:host .syntax--search-results .syntax--marker .syntax--region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .syntax--search-results .syntax--marker.syntax--current-result .syntax--region,
:host .syntax--search-results .syntax--marker.syntax--current-result .syntax--region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @text-dark; // haskell
}
// COMMENTS are here

.syntax--keyword {
  color: @keyword;

  &.syntax--control {
    color: @keyword; // haskell: do, case, of
  }

  &.syntax--operator {
    color: @operator; // haskell
  }

  &.syntax--other {
    color: @keyword;

    &.syntax--special-method {
      color: @blue;
    }

    &.syntax--unit {
      color: @orange;
      text-decoration: underline;
    }
  }

}

.syntax--storage {
  color: @data-type-keyword; // haskell

  &.syntax--type {
    //   color: @red;
    //   text-decoration: underline;

      &.syntax--class {
        //   color: @pink; // coffescript
        //   text-decoration: underline;
      }
  }
}

.syntax--constant {
  color: @constant; // haskell

  &.syntax--character.syntax--escape {
    color: @string-escape;
  }

  &.syntax--numeric {
    color: @numeric; // haskell
  }

  &.syntax--other.syntax--color {
    color: magenta; //@cyan;
    text-decoration: underline;
  }

  &.syntax--other.syntax--symbol {
    color: @green; // elixir:atom
  }
}

.syntax--variable {
  color: @syntax-variables;

  &.syntax--interpolation {
    color: darken(@red, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-color-function-params
  }
  &.syntax--other {
    color: @type-variable; // haskell
    // text-decoration: underline;

    &.syntax--instance {
      color: @blue;
    }
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
  color: @string; // haskell


  &.syntax--regexp {
    color: @string-regexp; // haskell

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @red;
    text-decoration: underline;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @text-dark; // haskell
    }

    &.syntax--string {
      color: @string; // haskell
    }
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array { // lua
      color: lighten(@syntax-text-color, 8%);
    //   text-decoration: underline;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: pink; //@blue;
      text-decoration: underline;
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

}

// .syntax--identifier { // haskell:any identifier
// }

.syntax--support {
  &.syntax--tag {
    color: @build-in-constructor;
  }

  &.syntax--class {
    color: @build-in-type; // haskell
  }

  &.syntax--function  {
    color: @build-in-function; // haskell

    &.syntax--any-method { // lua
      color: @blue;
    //   text-decoration: underline;
    }
  }
  &.syntax--other.syntax--module {
    color: @module; // haskell
  }
}

.syntax--entity {
  &.syntax--name.syntax--type {
    color: @data-type; // haskell
    // text-decoration: underline;
  }
  // &.syntax--other {
  //   text-decoration: underline;
  // }

  &.syntax--other.syntax--inherited-class {
    color: @deriving-classes; // haskell
  }

  &.syntax--name.syntax--function {
    color: @function; // haskell
  }

  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @light-orange; // coffescript
    // text-decoration: underline;
  }

  &.syntax--name.syntax--section {
    color: @blue;
    text-decoration: underline;
  }

  &.syntax--name.syntax--tag {
    color: @constructor; // haskell
  }

  &.syntax--other.syntax--attribute-name {
    color: @property; // haskell

    &.syntax--id {
      color: magenta; //@blue;
      text-decoration: underline;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--declaration { // haskell: whole declaration
      &.syntax--class {
      }
      &.syntax--instance {
      }
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.syntax--function {
      color: @pink; // haskell:operators in type signature if type-signature not defined
  }

  &.syntax--ctor {
      color: @pink;
      text-decoration: underline;
  }

  &.syntax--record-field { // haskell: whole record field
    //   text-decoration: underline;
  }

  &.syntax--type-signature { // haskell:operators in type signature
      color: @operators-type-signature;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: pink; //@green;
    text-decoration: underline;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @green;
  }
}

atom-text-editor[mini] .syntax--scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}
